/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pkg_Mobile_Shop;

import com.mysql.cj.xdevapi.Statement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.sql.PreparedStatement;
import java.lang.String;
import javax.swing.JOptionPane;


/**
 *
 * @author sai
 */
public class Add_Product extends javax.swing.JFrame {

    /**
     * Creates new form Add_Product
     */
    public Add_Product() {
        initComponents();
        Updt_Cmb_Category();
        Auto_ID();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lb_Add_New_Product = new javax.swing.JLabel();
        lb_Category = new javax.swing.JLabel();
        lb_Sub_Categoty = new javax.swing.JLabel();
        lb_Price = new javax.swing.JLabel();
        tb_Price = new javax.swing.JTextField();
        cmb_Sub_Category = new javax.swing.JComboBox<>();
        lb_Product_ID = new javax.swing.JLabel();
        tb_Product_ID = new javax.swing.JTextField();
        lb_Quantity = new javax.swing.JLabel();
        tb_Quantity = new javax.swing.JTextField();
        btn_Add = new javax.swing.JButton();
        lb_Display = new javax.swing.JLabel();
        lb_Internal_Storage = new javax.swing.JLabel();
        lb_Front_Camera = new javax.swing.JLabel();
        lb_Back_Camera = new javax.swing.JLabel();
        lb_Ram = new javax.swing.JLabel();
        lb_Warrenty = new javax.swing.JLabel();
        lb_Colour = new javax.swing.JLabel();
        cmb_Display = new javax.swing.JComboBox<>();
        cmb_Warrenty = new javax.swing.JComboBox<>();
        cmb_Storage = new javax.swing.JComboBox<>();
        cmb_Front_Camera = new javax.swing.JComboBox<>();
        cmb_Back_Camera = new javax.swing.JComboBox<>();
        cmb_Colour = new javax.swing.JComboBox<>();
        cmb_Ram = new javax.swing.JComboBox<>();
        cmb_Category = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lb_Add_New_Product.setFont(new java.awt.Font("MS Reference Sans Serif", 2, 24)); // NOI18N
        lb_Add_New_Product.setText("Add New Product");

        lb_Category.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        lb_Category.setText("Category :");

        lb_Sub_Categoty.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        lb_Sub_Categoty.setText("Sub-Category :");

        lb_Price.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        lb_Price.setText("Price:");

        tb_Price.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N

        cmb_Sub_Category.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N

        lb_Product_ID.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        lb_Product_ID.setText("Product ID:");

        tb_Product_ID.setEditable(false);
        tb_Product_ID.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N

        lb_Quantity.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        lb_Quantity.setText("Quantity:");

        tb_Quantity.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N

        btn_Add.setText("ADD");
        btn_Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_AddActionPerformed(evt);
            }
        });

        lb_Display.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        lb_Display.setText("Display:");

        lb_Internal_Storage.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        lb_Internal_Storage.setText("Internal Storage");

        lb_Front_Camera.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        lb_Front_Camera.setText("Front Camera");

        lb_Back_Camera.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        lb_Back_Camera.setText("Back Camera");

        lb_Ram.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        lb_Ram.setText("RAM:");

        lb_Warrenty.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        lb_Warrenty.setText("Warranty");

        lb_Colour.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        lb_Colour.setText("Colour");

        cmb_Display.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        cmb_Display.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1.65 inches", "2.40 inches", "2.80 inches" }));

        cmb_Warrenty.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        cmb_Warrenty.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1 Year", "1.5 Year" }));

        cmb_Storage.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        cmb_Storage.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "64 GB", "128 GB" }));

        cmb_Front_Camera.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        cmb_Front_Camera.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "13 MP", "32 PM", "8MP" }));

        cmb_Back_Camera.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        cmb_Back_Camera.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "32MP", "48MP" }));

        cmb_Colour.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        cmb_Colour.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Blue", "Red", "Black", "Silver" }));

        cmb_Ram.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        cmb_Ram.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "3 GB", "4 GB", "6 GB", "8 GB" }));

        cmb_Category.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        cmb_Category.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmb_CategoryItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 89, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lb_Product_ID, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lb_Sub_Categoty, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lb_Price, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lb_Category, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lb_Quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lb_Warrenty, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(69, 69, 69)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tb_Product_ID, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmb_Warrenty, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(cmb_Sub_Category, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(tb_Quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(tb_Price, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cmb_Category, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(1, 1, 1)))
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lb_Ram, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(lb_Internal_Storage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lb_Display, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(lb_Colour, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lb_Back_Camera, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lb_Front_Camera, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmb_Ram, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(cmb_Display, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cmb_Storage, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cmb_Front_Camera, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmb_Back_Camera, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmb_Colour, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(110, 110, 110))
            .addGroup(layout.createSequentialGroup()
                .addGap(533, 533, 533)
                .addComponent(btn_Add, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lb_Add_New_Product, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(486, 486, 486))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(lb_Add_New_Product, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lb_Product_ID, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(36, 36, 36)
                                .addComponent(lb_Category, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)
                                .addComponent(lb_Sub_Categoty, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(lb_Price, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addComponent(lb_Quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(tb_Product_ID, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(96, 96, 96)
                                .addComponent(cmb_Sub_Category, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(tb_Price, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addComponent(tb_Quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(lb_Warrenty, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cmb_Warrenty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lb_Colour, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cmb_Colour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addComponent(cmb_Ram, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lb_Ram, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lb_Display, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmb_Display, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmb_Category, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lb_Internal_Storage, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmb_Storage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lb_Front_Camera, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmb_Front_Camera, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lb_Back_Camera, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmb_Back_Camera, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(69, 69, 69)
                .addComponent(btn_Add, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    Connection con;
    PreparedStatement pst;
    int Prod_ID;
    private void btn_AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_AddActionPerformed
       
        try {
           Class.forName("com.mysql.cj.jdbc.Driver");
            con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/Mobile_Shop_DB","root","");
            
            pst = con.prepareStatement("INSERT INTO tb_Product_Details(Prod_ID,Category,Sub_Category,Price,Quantity,Warrenty,RAM,Display,Storage,Front_Camera,Back_Camera,Colour) VALUES(?,?,?,?,?,?,?,?,?,?,?,?)");
            pst.setString(1, tb_Product_ID.getText());
            pst.setString(2, cmb_Category.getSelectedItem().toString());
            pst.setString(3, cmb_Sub_Category.getSelectedItem().toString());
            pst.setString(4, tb_Price.getText());
            pst.setString(5, tb_Quantity.getText());
            pst.setString(6, cmb_Warrenty.getSelectedItem().toString());
            pst.setString(7, cmb_Ram.getSelectedItem().toString());
            pst.setString(8, cmb_Display.getSelectedItem().toString());
            pst.setString(9, cmb_Storage.getSelectedItem().toString());
            pst.setString(10, cmb_Front_Camera.getSelectedItem().toString());
            pst.setString(11, cmb_Back_Camera.getSelectedItem().toString());
            pst.setString(12, cmb_Colour.getSelectedItem().toString());
                      
            pst.executeUpdate();
            JOptionPane.showMessageDialog(this, "Product Added SuccessFully..");
            pst.close();
            
            con.close();
            
            
        } catch (ClassNotFoundException ex) {
           Logger.getLogger(Add_Category.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Add_Category.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn_AddActionPerformed

    private void cmb_CategoryItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmb_CategoryItemStateChanged
         
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/Mobile_Shop_DB","root","");
            
             String sql = "Select Sub_Category From tb_Sub_Category Where Category = '"+cmb_Category.getSelectedItem()+"' ";
            pst = con.prepareStatement(sql);
            ResultSet rs = pst.executeQuery();
            rs = pst.executeQuery();
            cmb_Sub_Category.removeAllItems();
            while(rs.next()){
                cmb_Sub_Category.addItem(rs.getString("Sub_Category"));
            }
           
            pst.close();
            rs.close();
            con.close();
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Add_Product.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Add_Product.class.getName()).log(Level.SEVERE, null, ex);
        }
            
            
           
        
        
    }//GEN-LAST:event_cmb_CategoryItemStateChanged
    
    public void Auto_ID() {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
             con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/Mobile_Shop_DB","root","");
             
             String sql = "select max(Prod_ID) From tb_Product_Details";
             pst = con.prepareStatement(sql);
            
             ResultSet rs = pst.executeQuery();
             if(rs.next()){
                 Prod_ID = rs.getInt(1);
                 Prod_ID++;
                 tb_Product_ID.setText(Integer.toString(Prod_ID));
             }
             
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Add_Product.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Add_Product.class.getName()).log(Level.SEVERE, null, ex);
        }
            
           
    }
    
    public void Updt_Cmb_Category(){
        
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/Mobile_Shop_DB","root","");
            
            String sql = "Select *from tb_Category";
            pst = con.prepareStatement(sql);
            ResultSet rs = pst.executeQuery();
            rs = pst.executeQuery();
            while(rs.next()){
                cmb_Category.addItem(rs.getString("Category"));
            }
           
            pst.close();
            rs.close();
            con.close();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Add_Sub_Category.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Add_Sub_Category.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Add_Product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Add_Product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Add_Product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Add_Product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Add_Product().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Add;
    private javax.swing.JComboBox<String> cmb_Back_Camera;
    private javax.swing.JComboBox<String> cmb_Category;
    private javax.swing.JComboBox<String> cmb_Colour;
    private javax.swing.JComboBox<String> cmb_Display;
    private javax.swing.JComboBox<String> cmb_Front_Camera;
    private javax.swing.JComboBox<String> cmb_Ram;
    private javax.swing.JComboBox<String> cmb_Storage;
    private javax.swing.JComboBox<String> cmb_Sub_Category;
    private javax.swing.JComboBox<String> cmb_Warrenty;
    private javax.swing.JLabel lb_Add_New_Product;
    private javax.swing.JLabel lb_Back_Camera;
    private javax.swing.JLabel lb_Category;
    private javax.swing.JLabel lb_Colour;
    private javax.swing.JLabel lb_Display;
    private javax.swing.JLabel lb_Front_Camera;
    private javax.swing.JLabel lb_Internal_Storage;
    private javax.swing.JLabel lb_Price;
    private javax.swing.JLabel lb_Product_ID;
    private javax.swing.JLabel lb_Quantity;
    private javax.swing.JLabel lb_Ram;
    private javax.swing.JLabel lb_Sub_Categoty;
    private javax.swing.JLabel lb_Warrenty;
    private javax.swing.JTextField tb_Price;
    private javax.swing.JTextField tb_Product_ID;
    private javax.swing.JTextField tb_Quantity;
    // End of variables declaration//GEN-END:variables
}
